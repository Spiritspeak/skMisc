// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// seq_composite
IntegerVector seq_composite(IntegerVector from, IntegerVector to);
RcppExport SEXP _skMisc_seq_composite(SEXP fromSEXP, SEXP toSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type from(fromSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type to(toSEXP);
    rcpp_result_gen = Rcpp::wrap(seq_composite(from, to));
    return rcpp_result_gen;
END_RCPP
}
// carryforward_numeric
NumericVector carryforward_numeric(NumericVector x);
RcppExport SEXP _skMisc_carryforward_numeric(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(carryforward_numeric(x));
    return rcpp_result_gen;
END_RCPP
}
// EnumerateFrom
List EnumerateFrom(List sequences, List times, String target);
RcppExport SEXP _skMisc_EnumerateFrom(SEXP sequencesSEXP, SEXP timesSEXP, SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type sequences(sequencesSEXP);
    Rcpp::traits::input_parameter< List >::type times(timesSEXP);
    Rcpp::traits::input_parameter< String >::type target(targetSEXP);
    rcpp_result_gen = Rcpp::wrap(EnumerateFrom(sequences, times, target));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_skMisc_seq_composite", (DL_FUNC) &_skMisc_seq_composite, 2},
    {"_skMisc_carryforward_numeric", (DL_FUNC) &_skMisc_carryforward_numeric, 1},
    {"_skMisc_EnumerateFrom", (DL_FUNC) &_skMisc_EnumerateFrom, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_skMisc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
