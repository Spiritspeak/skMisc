% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AATtools.R
\name{aat_splithalf}
\alias{aat_splithalf}
\alias{aat_splithalf_singlecore}
\title{Compute bootstrapped split-half reliability for approach-avoidance task data}
\usage{
aat_splithalf(ds, subjvar, pullvar, targetvar, rtvar, iters, plot = T,
  algorithm = c(aat_doublemeandiff, aat_doublemediandiff, aat_dscore,
  aat_multilevelscore), trialdropfunc = c(prune_nothing,
  trial_prune_3SD), errortrialfunc = c(prune_nothing,
  error_replace_blockmeanplus), casedropfunc = c(prune_nothing,
  case_prune_3SD), ...)

aat_splithalf_singlecore(ds, subjvar, pullvar, targetvar, rtvar, iters,
  plot = F, algorithm = c(aat_doublemeandiff, aat_doublemediandiff,
  aat_dscore, aat_multilevelscore), trialdropfunc = c(prune_nothing,
  trial_prune_3SD), casedropfunc = c(prune_nothing, case_prune_3SD), ...)
}
\arguments{
\item{ds}{a longformat data.frame}

\item{subjvar}{Quoted name of the participant identifier column}

\item{pullvar}{Quoted name of the column indicating pull trials. 
Pull trials should either be represented by 1, or by the second level of a factor.}

\item{targetvar}{Name of the column indicating trials featuring the target stimulus. 
Target stimuli should either be represented by 1, or by the second level of a factor.}

\item{rtvar}{Name of the reaction time column.}

\item{iters}{Total number of desired iterations. At least 200 are recommended for reasonable confidence intervals; 
If you want to see plots of your data, 1 iteration is enough.}

\item{plot}{Create a scatterplot of the AAT scores computed from each half of the data from the last iteration. 
This is highly recommended, as it helps to identify outliers that can inflate or diminish the reliability.}

\item{algorithm}{Function (without brackets or quotes) to be used to compute AAT scores. See \link{aat_doublemeandiff} for a list of usable algorithms.}

\item{trialdropfunc}{Function (without brackets or quotes) to be used to exclude outlying trials in each half. 
The way you handle outliers for the reliability computation should mimic the way you do it in your regular analyses. 
It is recommended to exclude outlying trials when computing AAT scores using the mean double-dfference scores and multilevel scoring approaches, 
but not when using d-scores or median double-difference scores.
\code{prune_nothing} excludes no trials, while \code{trial_prune_3SD} excludes trials deviating more than 3SD from the mean per participant.}

\item{errortrialfunc}{Function (without brackets or quotes) to apply to an error trial. 
\code{error_replace_blockmeanplus} replaces error trial reaction times with the block mean plus an arbitrary extra amount of time.
If used, the following additional arguments are required:
\itemize{
\item \code{blockvar} - Quoted name of the block variable
\item \code{errorvar} - Quoted name of the error variable, where errors are 1 or TRUE and correct trials are 0 or FALSE
\item \code{errorbonus} - Amount to add to the reaction time of error trials. Default is 0.6 (recommended by \code{Greenwald, Nosek, & Banaji, 2003})
}}

\item{casedropfunc}{Function (without brackets or quotes) to be used to exclude outlying participant scores in each half. 
The way you handle outliers here should mimic the way you do it in your regular analyses.
\code{prune_nothing} excludes no participants, while \code{case_prune_3SD} excludes participants deviating more than 3SD from the sample mean.}

\item{...}{Other arguments, to be passed on to the algorithm functions (see \code{algorithm} above)}
}
\value{
A list, containing the mean bootstrapped split-half reliability, bootstrapped 95% confidence intervals, 
a list of data.frames used over each iteration, and a vector containing the split-half reliability of each iteration.
}
\description{
Compute bootstrapped split-half reliability for approach-avoidance task data. 
\code{aat_splithalf()} uses multicore computation, which is fast, but provides no clear output when there are errors.
\code{aat_splithalf_singlecore()} is much slower, but more easily debugged.
}
\examples{
#Not Run
aat_splithalf(ds=ds2,subjvar="subjectid",pullvar="is_pull",targetvar="is_food",
              rtvar="rt",iters=1000,trialdropfunc=trial_prune_3SD,
              casedropfunc=case_prune_3SD,plot=T,algorithm=aat_dscore)
#Mean reliability: 0.521959
#Spearman-Brown-corrected r: 0.6859041
#95\%CI: [0.4167018, 0.6172474]

#Multilevel Splithalf
aat_splithalf(ds=ds2,subjvar="subjectid",pullvar="is_pull",targetvar="is_food",
              rtvar="rt",iters=100,trialdropfunc=trial_prune_3SD,
              casedropfunc=case_prune_3SD,plot=T,algorithm=aat_multilevelscore,
              formula = "rt ~ is_pull * is_food + (is_pull * is_food | subjectid)",
              aatterm = "is_pull:is_food")
#Mean reliability: 0.5313939
#Spearman-Brown-corrected r: 0.6940003
#95\%CI: [0.2687186, 0.6749176]
}
