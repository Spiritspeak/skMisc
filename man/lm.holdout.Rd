% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/holdout.R
\name{lm.holdout}
\alias{lm.holdout}
\alias{print.lm.holdout}
\alias{plot.lm.holdout}
\title{Linear Regression Holdouts}
\usage{
lm.holdout(
  model,
  goal = c("nsig", "flip"),
  terms = NULL,
  alpha = 0.05,
  verbose = FALSE
)

print.lm.holdout(x, ...)

\method{plot}{lm.holdout}(x, ...)
}
\arguments{
\item{model}{A \code{lm} model.}

\item{goal}{Objective of observation removal:
"nsig" (no longer significant) or "flip" (change of sign).}

\item{terms}{Names of model terms to compute holdout statistics for.
When \code{NULL}, it defaults to all model terms.}

\item{alpha}{Maximum p value for significance (only relevant when aiming to make value insignificant).}

\item{verbose}{Should the function generate verbose output? Defaults to \code{FALSE}.}

\item{x}{A \code{lm.holdout} object.}

\item{...}{Additional plotting parameters for \code{[base::plot()]}; ignored for \code{print}.}
}
\value{
A list, containing
\itemize{
\item \code{holdouts}: a \code{data.frame} where each row is a predictor; as for the columns:
\item \code{h} - the number of observations needed to reach the goal
\item \code{h.prop} - the percentage of excludable observations that were excluded to reach the goal
\item \code{final.beta} - the final beta value of the predictor after exclusions
\item \code{final.p} - the final p value of the predictor after exclusions
\item \code{exclusion.matrix}
\item \code{model}
}
}
\description{
Repeatedly remove the observation whose removal will move a model term
most strongly to zero, until it is either no longer significant
or has changed its sign.
}
\details{
Datapoints to exclude are found with the function \code{[stats::lm.influence()]}.

The plot function displays a scatterplot of each predictor with the dependent variable,
with the excluded datapoints colored differently.
}
\examples{

Sigma <- diag(1,nrow=3)
Sigma[1,-1] <- Sigma[-1,1]<- -.5
fakedata <- MASS::mvrnorm(n=1000,mu=c(0,0,0),Sigma=Sigma,empirical=TRUE)
fakedata <- as.data.frame(fakedata)

lmmod <- lm(V1~V2*V3,data=fakedata)

lmmod.h <- lm.holdout(lmmod,goal="nsig")
print(lmmod.h)

lmmod.h2 <- lm.holdout(lmmod,goal="flip")
print(lmmod.h2)

plot(lmmod.h)

}
\author{
Sercan Kahveci
}
